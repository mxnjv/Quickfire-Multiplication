<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>197, 34</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="timericon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wgAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>97</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B///gAP//wCD//8Ag///AMP//wAD///IA///yCf//8A////xf///+f////n///////8=
</value>
  </data>
</root>